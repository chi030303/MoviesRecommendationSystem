<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tangkeke.movie.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="tangkeke.movie.entity.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="first" jdbcType="BIT" property="first" />
    <result column="timestamp" jdbcType="BIGINT" property="timestamp" />
    <result column="access" jdbcType="BIT" property="access" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tangkeke.movie.entity.User">
    <result column="genres" jdbcType="LONGVARCHAR" property="genres" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, username, password, first, timestamp, access
  </sql>
  <sql id="Blob_Column_List">
    genres
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tangkeke.movie.entity.UserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tangkeke.movie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tangkeke.movie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tangkeke.movie.entity.User">
    insert into user (uid, username, password, 
      first, timestamp, access, genres
      )
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{first,jdbcType=BIT}, #{timestamp,jdbcType=BIGINT}, #{access,jdbcType=BIT}, #{genres,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tangkeke.movie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="first != null">
        first,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
      <if test="access != null">
        access,
      </if>
      <if test="genres != null">
        genres,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="first != null">
        #{first,jdbcType=BIT},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=BIGINT},
      </if>
      <if test="access != null">
        #{access,jdbcType=BIT},
      </if>
      <if test="genres != null">
        #{genres,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tangkeke.movie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="row.uid != null">
        uid = #{row.uid,jdbcType=INTEGER},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.first != null">
        first = #{row.first,jdbcType=BIT},
      </if>
      <if test="row.timestamp != null">
        timestamp = #{row.timestamp,jdbcType=BIGINT},
      </if>
      <if test="row.access != null">
        access = #{row.access,jdbcType=BIT},
      </if>
      <if test="row.genres != null">
        genres = #{row.genres,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set uid = #{row.uid,jdbcType=INTEGER},
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      first = #{row.first,jdbcType=BIT},
      timestamp = #{row.timestamp,jdbcType=BIGINT},
      access = #{row.access,jdbcType=BIT},
      genres = #{row.genres,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set uid = #{row.uid,jdbcType=INTEGER},
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      first = #{row.first,jdbcType=BIT},
      timestamp = #{row.timestamp,jdbcType=BIGINT},
      access = #{row.access,jdbcType=BIT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tangkeke.movie.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="first != null">
        first = #{first,jdbcType=BIT},
      </if>
      <if test="timestamp != null">
        timestamp = #{timestamp,jdbcType=BIGINT},
      </if>
      <if test="access != null">
        access = #{access,jdbcType=BIT},
      </if>
      <if test="genres != null">
        genres = #{genres,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tangkeke.movie.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      first = #{first,jdbcType=BIT},
      timestamp = #{timestamp,jdbcType=BIGINT},
      access = #{access,jdbcType=BIT},
      genres = #{genres,jdbcType=LONGVARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tangkeke.movie.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      first = #{first,jdbcType=BIT},
      timestamp = #{timestamp,jdbcType=BIGINT},
      access = #{access,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>