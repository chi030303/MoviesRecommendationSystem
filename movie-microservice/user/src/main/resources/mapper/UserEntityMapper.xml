<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movie.user.mapper.UserEntityMapper">
  <resultMap id="BaseResultMap" type="movie.user.entity.UserEntity">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="EMAIL_CONSTRAINT" jdbcType="VARCHAR" property="emailConstraint" />
    <result column="EMAIL_VERIFIED" jdbcType="TINYINT" property="emailVerified" />
    <result column="ENABLED" jdbcType="TINYINT" property="enabled" />
    <result column="FEDERATION_LINK" jdbcType="VARCHAR" property="federationLink" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="REALM_ID" jdbcType="VARCHAR" property="realmId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="CREATED_TIMESTAMP" jdbcType="BIGINT" property="createdTimestamp" />
    <result column="SERVICE_ACCOUNT_CLIENT_LINK" jdbcType="VARCHAR" property="serviceAccountClientLink" />
    <result column="NOT_BEFORE" jdbcType="INTEGER" property="notBefore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, EMAIL, EMAIL_CONSTRAINT, EMAIL_VERIFIED, ENABLED, FEDERATION_LINK, FIRST_NAME, 
    LAST_NAME, REALM_ID, USERNAME, CREATED_TIMESTAMP, SERVICE_ACCOUNT_CLIENT_LINK, NOT_BEFORE
  </sql>
  <select id="selectByExample" parameterType="movie.user.entity.UserEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_entity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_entity
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_entity
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="movie.user.entity.UserEntityExample">
    delete from user_entity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="movie.user.entity.UserEntity">
    insert into user_entity (ID, EMAIL, EMAIL_CONSTRAINT, 
      EMAIL_VERIFIED, ENABLED, FEDERATION_LINK, 
      FIRST_NAME, LAST_NAME, REALM_ID, 
      USERNAME, CREATED_TIMESTAMP, SERVICE_ACCOUNT_CLIENT_LINK, 
      NOT_BEFORE)
    values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{emailConstraint,jdbcType=VARCHAR}, 
      #{emailVerified,jdbcType=TINYINT}, #{enabled,jdbcType=TINYINT}, #{federationLink,jdbcType=VARCHAR}, 
      #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{realmId,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{createdTimestamp,jdbcType=BIGINT}, #{serviceAccountClientLink,jdbcType=VARCHAR}, 
      #{notBefore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="movie.user.entity.UserEntity">
    insert into user_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="emailConstraint != null">
        EMAIL_CONSTRAINT,
      </if>
      <if test="emailVerified != null">
        EMAIL_VERIFIED,
      </if>
      <if test="enabled != null">
        ENABLED,
      </if>
      <if test="federationLink != null">
        FEDERATION_LINK,
      </if>
      <if test="firstName != null">
        FIRST_NAME,
      </if>
      <if test="lastName != null">
        LAST_NAME,
      </if>
      <if test="realmId != null">
        REALM_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="createdTimestamp != null">
        CREATED_TIMESTAMP,
      </if>
      <if test="serviceAccountClientLink != null">
        SERVICE_ACCOUNT_CLIENT_LINK,
      </if>
      <if test="notBefore != null">
        NOT_BEFORE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailConstraint != null">
        #{emailConstraint,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null">
        #{emailVerified,jdbcType=TINYINT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="federationLink != null">
        #{federationLink,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="realmId != null">
        #{realmId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        #{createdTimestamp,jdbcType=BIGINT},
      </if>
      <if test="serviceAccountClientLink != null">
        #{serviceAccountClientLink,jdbcType=VARCHAR},
      </if>
      <if test="notBefore != null">
        #{notBefore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="movie.user.entity.UserEntityExample" resultType="java.lang.Long">
    select count(*) from user_entity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_entity
    <set>
      <if test="row.id != null">
        ID = #{row.id,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        EMAIL = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.emailConstraint != null">
        EMAIL_CONSTRAINT = #{row.emailConstraint,jdbcType=VARCHAR},
      </if>
      <if test="row.emailVerified != null">
        EMAIL_VERIFIED = #{row.emailVerified,jdbcType=TINYINT},
      </if>
      <if test="row.enabled != null">
        ENABLED = #{row.enabled,jdbcType=TINYINT},
      </if>
      <if test="row.federationLink != null">
        FEDERATION_LINK = #{row.federationLink,jdbcType=VARCHAR},
      </if>
      <if test="row.firstName != null">
        FIRST_NAME = #{row.firstName,jdbcType=VARCHAR},
      </if>
      <if test="row.lastName != null">
        LAST_NAME = #{row.lastName,jdbcType=VARCHAR},
      </if>
      <if test="row.realmId != null">
        REALM_ID = #{row.realmId,jdbcType=VARCHAR},
      </if>
      <if test="row.username != null">
        USERNAME = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.createdTimestamp != null">
        CREATED_TIMESTAMP = #{row.createdTimestamp,jdbcType=BIGINT},
      </if>
      <if test="row.serviceAccountClientLink != null">
        SERVICE_ACCOUNT_CLIENT_LINK = #{row.serviceAccountClientLink,jdbcType=VARCHAR},
      </if>
      <if test="row.notBefore != null">
        NOT_BEFORE = #{row.notBefore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_entity
    set ID = #{row.id,jdbcType=VARCHAR},
      EMAIL = #{row.email,jdbcType=VARCHAR},
      EMAIL_CONSTRAINT = #{row.emailConstraint,jdbcType=VARCHAR},
      EMAIL_VERIFIED = #{row.emailVerified,jdbcType=TINYINT},
      ENABLED = #{row.enabled,jdbcType=TINYINT},
      FEDERATION_LINK = #{row.federationLink,jdbcType=VARCHAR},
      FIRST_NAME = #{row.firstName,jdbcType=VARCHAR},
      LAST_NAME = #{row.lastName,jdbcType=VARCHAR},
      REALM_ID = #{row.realmId,jdbcType=VARCHAR},
      USERNAME = #{row.username,jdbcType=VARCHAR},
      CREATED_TIMESTAMP = #{row.createdTimestamp,jdbcType=BIGINT},
      SERVICE_ACCOUNT_CLIENT_LINK = #{row.serviceAccountClientLink,jdbcType=VARCHAR},
      NOT_BEFORE = #{row.notBefore,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="movie.user.entity.UserEntity">
    update user_entity
    <set>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailConstraint != null">
        EMAIL_CONSTRAINT = #{emailConstraint,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null">
        EMAIL_VERIFIED = #{emailVerified,jdbcType=TINYINT},
      </if>
      <if test="enabled != null">
        ENABLED = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="federationLink != null">
        FEDERATION_LINK = #{federationLink,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        LAST_NAME = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="realmId != null">
        REALM_ID = #{realmId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createdTimestamp != null">
        CREATED_TIMESTAMP = #{createdTimestamp,jdbcType=BIGINT},
      </if>
      <if test="serviceAccountClientLink != null">
        SERVICE_ACCOUNT_CLIENT_LINK = #{serviceAccountClientLink,jdbcType=VARCHAR},
      </if>
      <if test="notBefore != null">
        NOT_BEFORE = #{notBefore,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="movie.user.entity.UserEntity">
    update user_entity
    set EMAIL = #{email,jdbcType=VARCHAR},
      EMAIL_CONSTRAINT = #{emailConstraint,jdbcType=VARCHAR},
      EMAIL_VERIFIED = #{emailVerified,jdbcType=TINYINT},
      ENABLED = #{enabled,jdbcType=TINYINT},
      FEDERATION_LINK = #{federationLink,jdbcType=VARCHAR},
      FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      REALM_ID = #{realmId,jdbcType=VARCHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      CREATED_TIMESTAMP = #{createdTimestamp,jdbcType=BIGINT},
      SERVICE_ACCOUNT_CLIENT_LINK = #{serviceAccountClientLink,jdbcType=VARCHAR},
      NOT_BEFORE = #{notBefore,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>